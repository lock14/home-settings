#!/bin/bash

set -o errexit   # abort on nonzero exitstatus. Same as 'set -e'
set -o nounset   # abort on unbound variable. Same as 'set -u'
set -o pipefail  # don't hide errors within pipes

# Uncomment below line when debugging to get trace output
# set -o xtrace    # print trace

SDK_DIR="$HOME/software/sdk"
VERSION_REGEX="^go[0-9]+\.[0-9]+\.[0-9]+$"

GO_VERSION=""

usage() {
    echo "usage: $(basename "$0") [-u -l -n -s] <length>"
}

while getopts ":v:lh" opt; do
  case ${opt} in
    v )
      GO_VERSION="$OPTARG"
      ;;
    l )
      ls $SDK_DIR | grep -v '^go$' 
      exit 0
      ;;
    h )
      usage
      exit 0
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      usage
      exit 1
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

if ! [[ "$GO_VERSION" =~ $VERSION_REGEX ]]; then
    echo "malformed version. '$GO_VERSION' is not a valid go version" 1>&2
    exit 1
fi

if ! [ -d "$SDK_DIR/$GO_VERSION" ]; then
    echo "$GO_VERSION is not installed"
    exit 1
fi

rm "$SDK_DIR/go"
ln -s "$SDK_DIR/$GO_VERSION" "$SDK_DIR/go"
