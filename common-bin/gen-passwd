#!/bin/sh

UPPER="A-Z"
LOWER="a-z"
NUMBERS="0-9"
SYMBOLS="^*@#&%\$\!"

LENGTH="16"
CHARACTER_SET=""

usage() {
    echo "usage: $(basename "$0") [-u -l -n -s] <length>"
}

while getopts ":ulnsh" opt; do
  case ${opt} in
    u )
      CHARACTER_SET="$CHARACTER_SET$UPPER"
      ;;
    l )
      CHARACTER_SET="$CHARACTER_SET$LOWER"
      ;;
    n )
      CHARACTER_SET="$CHARACTER_SET$NUMBERS"
      ;;
    s )
      CHARACTER_SET="$CHARACTER_SET$SYMBOLS"
      ;;
    h )
      usage
      exit 0
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      usage
      exit 1
      ;;
    : )
      echo "Invalid option: $OPTARG requires an argument" 1>&2
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

LENGTH="$1"

if [ "$LENGTH" = "" ]; then
  echo "a length must be provided"
  usage
  exit 1
fi

INTEGER='^[0-9]+$'
if ! [[ $LENGTH =~ $INTEGER ]] ; then
   echo "error: $LENGTH is not a number"
   exit 1
fi

if [ "$CHARACTER_SET" = "" ]; then
  CHARACTER_SET="$UPPER$LOWER$NUMBERS$SYMBOLS"
fi

# consider replacing with something like:
# < /dev/urandom tr -dc 'A-Za-z0-9^*@#&%$\!' | fold -w 8 | grep '.*[0-9]' | grep '.*[a-z]' | grep '.*[A-Z]' | head -n 1
# in order to ensure there is one letter from each character set. Still Need to figure out symbols
< /dev/urandom tr -dc "$CHARACTER_SET" | head -c "$LENGTH"; echo
